services:
  # ---------------- MQTT ----------------
  mosquitto:
    image: eclipse-mosquitto:2.0
    restart: unless-stopped
    volumes:
      - ./mosquitto/mosquitto.conf:/mosquitto/config/mosquitto.conf:ro
    ports:
      - "1883:1883"           # MQTT
      - "9001:9001"           # MQTT over WebSocket
    networks:
      - iot-net

  # ---------------- Zookeeper & Kafka ----------------
  zookeeper:
    profiles: [ "prod" ]
    image: confluentinc/cp-zookeeper:7.6.0
    restart: unless-stopped
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"
    networks:
      - iot-net

  kafka:
    profiles: [ "prod" ]
    image: confluentinc/cp-kafka:7.6.0
    restart: unless-stopped
    depends_on:
      - zookeeper
    healthcheck:
      test: [ "CMD", "bash", "-c", "nc -z localhost 29092" ]
      interval: 10s
      timeout: 5s
      retries: 5
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:29092,PLAINTEXT_HOST://0.0.0.0:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    ports:
      - "9092:9092"   # external access for local dev
    volumes:
      - kafkadata:/var/lib/kafka/data
    networks:
      - iot-net

  # ---------------- Kafka UI ----------------
  kafka-ui:
    profiles: [ "prod" ]
    image: provectuslabs/kafka-ui:latest
    restart: unless-stopped
    depends_on:
      - kafka
    environment:
      KAFKA_CLUSTERS_0_NAME: iot-cluster
      KAFKA_CLUSTERS_0_BOOTSTRAP_SERVERS: kafka:29092
      KAFKA_CLUSTERS_0_ZOOKEEPER: zookeeper:2181
    ports:
      - "8082:8080"   # host 8082 -> container 8080
    networks:
      - iot-net

  # ---------------- Ingest Service ----------------
  ingest:
    profiles: [ "prod" ]
    build:
      context: ../ingest-service
    restart: unless-stopped
    depends_on:
      kafka:
        condition: service_healthy
      mosquitto:
        condition: service_started
    extra_hosts:
      - "host.docker.internal:host-gateway"
    ports:
      - "8080:8080"
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://host.docker.internal:5432/smarthome
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: postgres
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:29092
      MQTT_BROKER: tcp://mosquitto:1883
    networks: [ iot-net ]

# ---------------- Networks & Volumes ----------------
networks:
  iot-net:
    driver: bridge

volumes:
  kafkadata:
