<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0
                             https://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>com.example.iot</groupId>
  <artifactId>ingest-service</artifactId>
  <version>0.1.0-SNAPSHOT</version>
  <name>IoT Ingest Service</name>
  <packaging>jar</packaging>

  <!-- ::::::::::::::::::::::::::::: -->
  <!-- Global properties             -->
  <!-- ::::::::::::::::::::::::::::: -->
  <properties>
    <java.version>21</java.version>
    <spring.boot.version>3.4.2</spring.boot.version>
    <testcontainers.version>1.19.5</testcontainers.version>
    <lombok.version>1.18.32</lombok.version>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
  </properties>

  <!-- ::::::::::::::::::::::::::::: -->
  <!-- Dependency management (BOMs) -->
  <!-- ::::::::::::::::::::::::::::: -->
  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-dependencies</artifactId>
        <version>${spring.boot.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>

      <dependency>
        <groupId>org.testcontainers</groupId>
        <artifactId>testcontainers-bom</artifactId>
        <version>${testcontainers.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
    </dependencies>
  </dependencyManagement>

  <!-- ::::::::::::::::::::::::::::: -->
  <!-- Dependencies                  -->
  <!-- ::::::::::::::::::::::::::::: -->
  <dependencies>

    <!-- Spring Boot core -->
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter</artifactId>
    </dependency>

    <!-- Web + GraphQL -->
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-web</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-graphql</artifactId>
    </dependency>

    <!-- JPA + PostgreSQL / Timescale -->
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-data-jpa</artifactId>
    </dependency>
    <dependency>
      <groupId>org.postgresql</groupId>
      <artifactId>postgresql</artifactId>
    </dependency>

    <!-- Kafka producer -->
    <dependency>
      <groupId>org.springframework.kafka</groupId>
      <artifactId>spring-kafka</artifactId>
    </dependency>

    <!-- MQTT (Paho v5) -->
    <dependency>
      <groupId>org.eclipse.paho</groupId>
      <artifactId>org.eclipse.paho.mqttv5.client</artifactId>
      <version>1.2.5</version>
    </dependency>

    <!-- Validation -->
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-validation</artifactId>
    </dependency>

    <!-- Lombok (compile-time only) -->
    <dependency>
      <groupId>org.projectlombok</groupId>
      <artifactId>lombok</artifactId>
      <version>${lombok.version}</version>
      <scope>provided</scope>
    </dependency>

    <!-- Jackson Java-Time module -->
    <dependency>
      <groupId>com.fasterxml.jackson.datatype</groupId>
      <artifactId>jackson-datatype-jsr310</artifactId>
    </dependency>

    <!-- ::::::::::: -->
    <!--   Tests     -->
    <!-- ::::::::::: -->
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-test</artifactId>
      <scope>test</scope>
      <exclusions>
        <exclusion>
          <groupId>org.junit.vintage</groupId>
          <artifactId>junit-vintage-engine</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.testcontainers</groupId>
      <artifactId>postgresql</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.testcontainers</groupId>
      <artifactId>kafka</artifactId>
      <scope>test</scope>
    </dependency>
  </dependencies>

  <!-- ::::::::::::::::::::::::::::: -->
  <!-- Build plugins                 -->
  <!-- ::::::::::::::::::::::::::::: -->
  <build>
    <plugins>

      <!-- Compiler: Java 21 + Lombok annotation processing -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>3.11.0</version>
        <configuration>
          <release>${java.version}</release>
          <compilerArgs>
            <arg>-parameters</arg>
          </compilerArgs>
          <annotationProcessorPaths>
            <path>
              <groupId>org.projectlombok</groupId>
              <artifactId>lombok</artifactId>
              <version>${lombok.version}</version>
            </path>
          </annotationProcessorPaths>
        </configuration>
      </plugin>

      <!-- Spring Boot executable jar + layered Docker image support -->
      <plugin>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-maven-plugin</artifactId>
        <version>${spring.boot.version}</version>
        <configuration>
          <layers enabled="true"/>
        </configuration>
      </plugin>

      <!-- Toolchains: ensure JDK 21 in local & CI -->
<!--      <plugin>-->
<!--        <groupId>org.apache.maven.plugins</groupId>-->
<!--        <artifactId>maven-toolchains-plugin</artifactId>-->
<!--        <version>3.1.0</version>-->
<!--        <executions>-->
<!--          <execution>-->
<!--            <goals><goal>toolchain</goal></goals>-->
<!--          </execution>-->
<!--        </executions>-->
<!--        <configuration>-->
<!--          <toolchains>-->
<!--            <jdk>-->
<!--              <version>${java.version}</version>-->
<!--              <vendor>temurin</vendor>-->
<!--            </jdk>-->
<!--          </toolchains>-->
<!--        </configuration>-->
<!--      </plugin>-->

    </plugins>
  </build>
</project>
